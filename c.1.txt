= c(1)
:doctype:    manpage
:man source: c.py

== Name

c.py - a replacement for [c]at with automatic syntax highlighting

== Synopsis

----
c [--number] [--show-lexer] [--no-pager] [--skip-pygments]
  [--lexer LEXER] [--theme _THEME_] [--] [FILE ...] [-]
----

== Description

c.py aims to be a drop-in replacement for the well known tool cat(1). c.py
is written in Python and provides some advantages over cat, for instance
automatic syntax highlighting using the excellent pygments library. The
output is piped through the pager `less` per default. The environment
variable `LESS` is set to `FRS` by c.py to ensure that colors are displayed
properly. The pager exits if the output fits into the screen.

== Options

`-n`::
`--number`::
    Prefix all output lines with a linenumber.

`--no-pager`::
    Do not pipe the output c.py's output into a pager. Setting the environment
    variable `C_NO_PAGER` to a non-empty value also disables paging.

`--skip-pygments`::
    Do not use pygments at all. This option advices c.py to bypass pygments
    completely. That means no synthax highlighting is performed!

`-l` _LEXER_::
`--lexer` _LEXER_::
    This option forces c.py to use a particular lexer; it does not try to guess
    one. This setting is useful when c.py guesses the wrong lexer. To disable
    highlighting use `--lexer text`. A list of supported lexers can be obtained
    from the pygments' project page.

`--theme` _THEME_::
    Specify the pygments theme. Currently there is only `light` or `dark`
    supported. The theme can also be set through the environment variable
    `C_PYGMENTS_THEME`.

== Evironment Variables

`PAGER`::
    The `PAGER` variable is honored by the `click` library. c.py uses the
    pager which is specified in `PAGER`. It falls back to `cat`.

`C_PAGER`::
    The `C_PAGER` variable is honored by the `click` library. c.py uses the
    pager which is specified in `C_PAGER`. The `C_PAGER` variable can be used
    to overwrite `PAGER` in order to use a custom pager with c.py.

`C_NO_PAGER`::
    When `C_NO_PAGER` is set to a non empty value, c.py does not pipe any
    output to a pager.

`C_PYGMENTS_THEME`::
    The theme which is used by pygments can be overwritten using the environment
    variable `C_PYGMENTS_THEME`. Currently there is only `light` and `dark`
    supported. The theme set by this environment variable can be overwritten
    with the command line option `--theme THEME`.

`C_DEBUG`::
    When set to a non empty value c.py prints some potentially interesting
    runtime information for debugging purposes to `stdout`.

== Bugs

Bugs? You must be kidding; there are no bugs in this software. But if we
happen to be wrong, send us an email with as much detail as possible to
mailto:rumpelsepp@sevenbyte.org[].

== Author

Current maintainer: Stefan Tatschner <rumpelsepp@sevenbyte.org>

For additional contributors, use `git shortlog -sne` on the c.py.git
repository.
